version: "3"
##### services #####
services:
  ### ldap ###
  openldap:
    build:
      context: ./openldap
    domainname: ${DOMAINNAME}
    hostname: openldap
    environment:
      - LDAP_LOG_LEVEL=256
      - LDAP_ORGANISATION=${LDAP_ORGANISATION}
      - LDAP_DOMAIN=${LDAP_DOMAIN}
      - LDAP_BASE_DN=${LDAP_BASE_DN}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_CONFIG_PASSWORD=${LDAP_CONFIG_PASSWORD}
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_USERNAME=readonly
      - LDAP_READONLY_USER_PASSWORD=${LDAP_READONLY_PASSWORD}
      - LDAP_BACKEND=hdb
      - LDAP_TLS=true
      - LDAP_TLS_CRT_FILENAME=ldap.crt
      - LDAP_TLS_KEY_FILENAME=ldap.key
      - LDAP_TLS_CA_CRT_FILENAME=ca.crt
      - LDAP_TLS_ENFORCE=false
      - LDAP_TLS_CIPHER_SUITE=SECURE256:-VERS-SSL3.0
      - LDAP_TLS_PROTOCOL_MIN=3.1
      - LDAP_TLS_VERIFY_CLIENT=demand
      - LDAP_REPLICATION=false
      #- LDAP_REPLICATION_CONFIG_SYNCPROV=binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical
      #- LDAP_REPLICATION_DB_SYNCPROV=binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical
      #- LDAP_REPLICATION_HOSTS=#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=true
      - LDAP_SSL_HELPER_PREFIX=ldap
    tty: true
    stdin_open: true
    volumes:
      - "${DATA_PATH}/var/lib/ldap:/var/lib/ldap"
      - "${DATA_PATH}/etc/ldap/slapd.d:/etc/ldap/slapd.d"
      #- '${DATA_PATH}/container/service/slapd/assets/certs/:/container/service/slapd/assets/certs/'
    ports:
      #- "389:389"
      - "636:636"

  ldapaccountmanager:
    build:
      context: ./ldap-account-manager
    domainname: ${DOMAINNAME}
    hostname: ldapaccountmanager
    volumes:
      - "${DATA_PATH}/var/lib/ldap-account-manager/:/var/lib/ldap-account-manager/:rw"
    depends_on:
      - openldap

  ### jenkins ###
  jenkins:
    build:
      context: ./jenkins
    domainname: ${DOMAINNAME}
    hostname: jenkins
    volumes:
      - "${DATA_PATH}/var/jenkins_home:/var/jenkins_home"
      - "${DATA_PATH}/downloads:/downloads"
    depends_on:
      - openldap
    ports:
      #  - "8080:8080"
      - "50000:50000"

  ### gitlab ###
  gitlab:
    build:
      context: ./gitlab
    domainname: ${DOMAINNAME}
    hostname: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.${DOMAINNAME}'
        registry_external_url 'https://gitlab.${DOMAINNAME}:4567'
        mattermost_external_url 'https://mattermost.${DOMAINNAME}'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
        gitlab_rails['gitlab_email_from'] = 'gitlab@${DOMAINNAME}'
        gitlab_rails['gitlab_email_reply_to'] = 'noreply@${DOMAINNAME}'
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "smtp.gmail.com"
        gitlab_rails['smtp_port'] = 587
        gitlab_rails['smtp_user_name'] = "${SMTP_USER_NAME}"
        gitlab_rails['smtp_password'] = "${SMTP_USER_PASSWORD}"
        gitlab_rails['smtp_domain'] = "smtp.gmail.com"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['smtp_openssl_verify_mode'] = 'peer' # Can be: 'none', 'peer', 'client_once', 'fail_if_no_peer_cert', see http://api.rubyonrails.org/classes/ActionMailer/Base.html
        gitlab_rails['ldap_enabled'] = true
        gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
            main:
              label: 'LDAP'
              host: 'openldap'
              port: 389
              uid: 'uid'
              method: 'plain' # "tls" or "ssl" or "plain"
              bind_dn: 'cn=readonly,${LDAP_BASE_DN}'
              password: '${LDAP_READONLY_PASSWORD}'
              active_directory: false
              allow_username_or_email_login: true
              base: '${LDAP_BASE_DN}'
              user_filter: ''
              attributes:
                username: ['uid', 'userid', 'sAMAccountName']
                email: ['mail', 'email', 'userPrincipalName']
                name: 'cn'
                first_name: 'givenName'
                last_name: 'sn'
              lowercase_usernames: false
        EOS
    ulimits:
      sigpending: 62793
      nproc: 131072
      nofile:
        soft: 20000
        hard: 40000
      core: 0

    ports:
      #  - '80:80'
      - "2224:22"
      - "4567:4567"
    volumes:
      - "${DATA_PATH}/gitlab/config:/etc/gitlab"
      - "${DATA_PATH}/gitlab/logs:/var/log/gitlab"
      - "${DATA_PATH}/gitlab/data:/var/opt/gitlab"
      - "${DATA_PATH}/nginx/certs/live/${DOMAINNAME}/privkey.pem:/etc/gitlab/ssl/gitlab.${DOMAINNAME}.key"
      - "${DATA_PATH}/nginx/certs/live/${DOMAINNAME}/privkey.pem:/etc/gitlab/ssl/mattermost.${DOMAINNAME}.key"
      - "${DATA_PATH}/nginx/certs/live/${DOMAINNAME}/fullchain.pem:/etc/gitlab/ssl/gitlab.${DOMAINNAME}.crt"
      - "${DATA_PATH}/nginx/certs/live/${DOMAINNAME}/fullchain.pem:/etc/gitlab/ssl/mattermost.${DOMAINNAME}.crt"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - openldap

  plantuml:
    image: plantuml/plantuml-server:tomcat

  ### nextcloud ###
  nextcloud-db:
    image: mariadb
    domainname: ${DOMAINNAME}
    volumes:
      - "${DATA_PATH}/nextcloud/db-data:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWORD}

  nextcloud-redis:
    image: redis:alpine
    domainname: ${DOMAINNAME}
    volumes:
      - "${DATA_PATH}/nextcloud/redis-data:/data"

  nextcloud:
    build: nextcloud
    domainname: ${DOMAINNAME}
    hostname: nextcloud
    environment:
      - UID=1000
      - GID=1000
      - UPLOAD_MAX_SIZE=10G
      - APC_SHM_SIZE=128M
      - OPCACHE_MEM_SIZE=128
      - REDIS_MAX_MEMORY=64mb
      - CRON_PERIOD=15m
      - TZ=CET
      - ADMIN_USER=root
      - ADMIN_PASSWORD=${NEXTCLOUD_PASSWORD}
      - DB_TYPE=mysql
      - DB_NAME=nextcloud
      - DB_USER=nextcloud
      - DB_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - DB_HOST=nextcloud-db
    depends_on:
      - nextcloud-db
      - nextcloud-redis
      - openldap
    volumes:
      - "${DATA_PATH}/nextcloud/data:/data"
      - "${DATA_PATH}/nextcloud/config:/nextcloud/config"
      - "${DATA_PATH}/nextcloud/apps:/nextcloud/apps2"

  ### downloads ###
  downloads:
    build: ./downloads
    domainname: ${DOMAINNAME}
    hostname: downloads
    volumes:
      - "${DATA_PATH}/downloads:/usr/local/apache2/htdocs/:ro"

  ### matomo web analytics
  matomo:
    image: wonderfall/matomo
    links:
      - db_matomo:db_matomo
    volumes:
      - "${DATA_PATH}/matomo/config:/config"
    environment:
      - GID=1000
      - UID=1000

  db_matomo:
    image: mariadb:10
    volumes:
      - "${DATA_PATH}/matomo/db:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=${MATOMO_DB_PASSWORD}
      - MYSQL_DATABASE=matomo
      - MYSQL_USER=matomo
      - MYSQL_PASSWORD=${MATOMO_DB_PASSWORD}

    ### frp ### A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.

  frp:
    build:
      context: ./frp
    ports:
      - "7000:7000/tcp"
      - "7000:7000/udp"
      - "7500:7500/tcp"
      - "127.0.0.1:20000-20099:20000-20099/tcp"
    volumes:
      - ${DATA_PATH}/etc/frps.ini:/opt/frp/frps.ini
    restart: always

  ### nginx ###
  nginx:
    build:
      context: ./nginx
    domainname: ${DOMAINNAME}
    hostname: nginx
    volumes:
      - "${DATA_PATH}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "${DATA_PATH}/nginx/conf.d:/etc/nginx/conf.d:ro"
      - "${DATA_PATH}/nginx/certs:/etc/nginx/certs:ro"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - openldap

  certbot:
    image: certbot/certbot
    domainname: ${DOMAINNAME}
    hostname: certbot
    command: "certonly -n --standalone --agree-tos --email admin@${DOMAINNAME} -d ${DOMAINNAME} -d www.${DOMAINNAME} -d downloads.${DOMAINNAME} -d nextcloud.${DOMAINNAME} -d gitlab.${DOMAINNAME} -d jenkins.${DOMAINNAME}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "${DATA_PATH}/nginx/certs:/etc/letsencrypt:rw"

  ### vpn ###

  vpn:
    build:
      context: ./wireguard
    domainname: ${DOMAINNAME}
    hostname: vpn
    volumes:
      - "${DATA_PATH}/etc/wireguard:/etc/wireguard"
    ports:
      - 5555:5555/udp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - "net.ipv4.ip_forward=1"
      - "net.ipv6.conf.all.disable_ipv6=0"
      - "net.ipv6.conf.all.forwarding=1"
      - "net.ipv6.conf.default.forwarding=1"


  ### honeypot

  honeypot:
    image: cowrie/cowrie
    ports:
      - "2222:2222/tcp"
      - "2223:2223"
